// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { ethereum, JSONValue, TypedMap, Entity, Bytes, Address, BigInt } from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AssetsUnderManagementCapSet extends ethereum.Event {
  get params(): AssetsUnderManagementCapSet__Params {
    return new AssetsUnderManagementCapSet__Params(this);
  }
}

export class AssetsUnderManagementCapSet__Params {
  _event: AssetsUnderManagementCapSet;

  constructor(event: AssetsUnderManagementCapSet) {
    this._event = event;
  }

  get newCap(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DepositCreated extends ethereum.Event {
  get params(): DepositCreated__Params {
    return new DepositCreated__Params(this);
  }
}

export class DepositCreated__Params {
  _event: DepositCreated;

  constructor(event: DepositCreated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get depositId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get interestRate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get interestReceivable(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class DepositWithdrawn extends ethereum.Event {
  get params(): DepositWithdrawn__Params {
    return new DepositWithdrawn__Params(this);
  }
}

export class DepositWithdrawn__Params {
  _event: DepositWithdrawn;

  constructor(event: DepositWithdrawn) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get depositId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get principal(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DurationBonusRateUpdated extends ethereum.Event {
  get params(): DurationBonusRateUpdated__Params {
    return new DurationBonusRateUpdated__Params(this);
  }
}

export class DurationBonusRateUpdated__Params {
  _event: DurationBonusRateUpdated;

  constructor(event: DurationBonusRateUpdated) {
    this._event = event;
  }

  get duration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class InterestClaimed extends ethereum.Event {
  get params(): InterestClaimed__Params {
    return new InterestClaimed__Params(this);
  }
}

export class InterestClaimed__Params {
  _event: InterestClaimed;

  constructor(event: InterestClaimed) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get depositId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get interestCollectible(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MembershipInserted extends ethereum.Event {
  get params(): MembershipInserted__Params {
    return new MembershipInserted__Params(this);
  }
}

export class MembershipInserted__Params {
  _event: MembershipInserted;

  constructor(event: MembershipInserted) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get insertedMembershipTier(): MembershipInsertedInsertedMembershipTierStruct {
    return changetype<MembershipInsertedInsertedMembershipTierStruct>(this._event.parameters[1].value.toTuple());
  }
}

export class MembershipInsertedInsertedMembershipTierStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get lowerThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get upperThreshold(): BigInt {
    return this[2].toBigInt();
  }

  get interestRate(): BigInt {
    return this[3].toBigInt();
  }

  get referralBonusCollectibleLevelLowerBound(): BigInt {
    return this[4].toBigInt();
  }

  get referralBonusCollectibleLevelUpperBound(): BigInt {
    return this[5].toBigInt();
  }
}

export class MembershipTierChanged extends ethereum.Event {
  get params(): MembershipTierChanged__Params {
    return new MembershipTierChanged__Params(this);
  }
}

export class MembershipTierChanged__Params {
  _event: MembershipTierChanged;

  constructor(event: MembershipTierChanged) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get membershipTierIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MembershipUpdated extends ethereum.Event {
  get params(): MembershipUpdated__Params {
    return new MembershipUpdated__Params(this);
  }
}

export class MembershipUpdated__Params {
  _event: MembershipUpdated;

  constructor(event: MembershipUpdated) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get updatedMembershipTier(): MembershipUpdatedUpdatedMembershipTierStruct {
    return changetype<MembershipUpdatedUpdatedMembershipTierStruct>(this._event.parameters[1].value.toTuple());
  }
}

export class MembershipUpdatedUpdatedMembershipTierStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get lowerThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get upperThreshold(): BigInt {
    return this[2].toBigInt();
  }

  get interestRate(): BigInt {
    return this[3].toBigInt();
  }

  get referralBonusCollectibleLevelLowerBound(): BigInt {
    return this[4].toBigInt();
  }

  get referralBonusCollectibleLevelUpperBound(): BigInt {
    return this[5].toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PassMinted extends ethereum.Event {
  get params(): PassMinted__Params {
    return new PassMinted__Params(this);
  }
}

export class PassMinted__Params {
  _event: PassMinted;

  constructor(event: PassMinted) {
    this._event = event;
  }

  get minter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get mintedTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get referrerTokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReferralBonusClaimed extends ethereum.Event {
  get params(): ReferralBonusClaimed__Params {
    return new ReferralBonusClaimed__Params(this);
  }
}

export class ReferralBonusClaimed__Params {
  _event: ReferralBonusClaimed;

  constructor(event: ReferralBonusClaimed) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get referralBonusId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get rewardCollectible(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReferralBonusLevelCollectionActivated extends ethereum.Event {
  get params(): ReferralBonusLevelCollectionActivated__Params {
    return new ReferralBonusLevelCollectionActivated__Params(this);
  }
}

export class ReferralBonusLevelCollectionActivated__Params {
  _event: ReferralBonusLevelCollectionActivated;

  constructor(event: ReferralBonusLevelCollectionActivated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get referralLevel(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get logIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReferralBonusLevelCollectionDeactivated extends ethereum.Event {
  get params(): ReferralBonusLevelCollectionDeactivated__Params {
    return new ReferralBonusLevelCollectionDeactivated__Params(this);
  }
}

export class ReferralBonusLevelCollectionDeactivated__Params {
  _event: ReferralBonusLevelCollectionDeactivated;

  constructor(event: ReferralBonusLevelCollectionDeactivated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get referralLevel(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get logIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReferralBonusRateUpdated extends ethereum.Event {
  get params(): ReferralBonusRateUpdated__Params {
    return new ReferralBonusRateUpdated__Params(this);
  }
}

export class ReferralBonusRateUpdated__Params {
  _event: ReferralBonusRateUpdated;

  constructor(event: ReferralBonusRateUpdated) {
    this._event = event;
  }

  get referralLevel(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bonusRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReferralCodeCreated extends ethereum.Event {
  get params(): ReferralCodeCreated__Params {
    return new ReferralCodeCreated__Params(this);
  }
}

export class ReferralCodeCreated__Params {
  _event: ReferralCodeCreated;

  constructor(event: ReferralCodeCreated) {
    this._event = event;
  }

  get referralCode(): string {
    return this._event.parameters[0].value.toString();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReferralRewardCreated extends ethereum.Event {
  get params(): ReferralRewardCreated__Params {
    return new ReferralRewardCreated__Params(this);
  }
}

export class ReferralRewardCreated__Params {
  _event: ReferralRewardCreated;

  constructor(event: ReferralRewardCreated) {
    this._event = event;
  }

  get referrerTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get referralBonusId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get referralLevel(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MyDanDefi__depositsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt, value4: BigInt, value5: BigInt, value6: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getPrincipal(): BigInt {
    return this.value0;
  }

  getStartTime(): BigInt {
    return this.value1;
  }

  getMaturity(): BigInt {
    return this.value2;
  }

  getInterestRate(): BigInt {
    return this.value3;
  }

  getInterestReceivable(): BigInt {
    return this.value4;
  }

  getInterestCollected(): BigInt {
    return this.value5;
  }

  getLastClaimedAt(): BigInt {
    return this.value6;
  }
}

export class MyDanDefi__membershipTiersResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(value0: string, value1: BigInt, value2: BigInt, value3: BigInt, value4: BigInt, value5: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getLowerThreshold(): BigInt {
    return this.value1;
  }

  getUpperThreshold(): BigInt {
    return this.value2;
  }

  getInterestRate(): BigInt {
    return this.value3;
  }

  getReferralBonusCollectibleLevelLowerBound(): BigInt {
    return this.value4;
  }

  getReferralBonusCollectibleLevelUpperBound(): BigInt {
    return this.value5;
  }
}

export class MyDanDefi__profilesResult {
  value0: BigInt;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;

  constructor(value0: BigInt, value1: string, value2: BigInt, value3: BigInt, value4: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getReferrerTokenId(): BigInt {
    return this.value0;
  }

  getReferralCode(): string {
    return this.value1;
  }

  getDepositSum(): BigInt {
    return this.value2;
  }

  getMembershipTier(): BigInt {
    return this.value3;
  }

  getIsInitialised(): boolean {
    return this.value4;
  }
}

export class MyDanDefi__referralRewardsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt, value4: BigInt, value5: BigInt, value6: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getReferralLevel(): BigInt {
    return this.value0;
  }

  getStartTime(): BigInt {
    return this.value1;
  }

  getMaturity(): BigInt {
    return this.value2;
  }

  getReferralBonusReceivable(): BigInt {
    return this.value3;
  }

  getRewardClaimed(): BigInt {
    return this.value4;
  }

  getLastClaimedAt(): BigInt {
    return this.value5;
  }

  getDepositId(): BigInt {
    return this.value6;
  }
}

export class MyDanDefi__tierActivationLogsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getStart(): BigInt {
    return this.value0;
  }

  getEnd(): BigInt {
    return this.value1;
  }
}

export class MyDanDefi extends ethereum.SmartContract {
  static bind(address: Address): MyDanDefi {
    return new MyDanDefi("MyDanDefi", address);
  }

  assetsUnderManagementCap(): BigInt {
    let result = super.call("assetsUnderManagementCap", "assetsUnderManagementCap():(uint256)", []);

    return result[0].toBigInt();
  }

  try_assetsUnderManagementCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("assetsUnderManagementCap", "assetsUnderManagementCap():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimPass(referralCode: string): BigInt {
    let result = super.call("claimPass", "claimPass(string):(uint256)", [ethereum.Value.fromString(referralCode)]);

    return result[0].toBigInt();
  }

  try_claimPass(referralCode: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("claimPass", "claimPass(string):(uint256)", [ethereum.Value.fromString(referralCode)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimReferralBonus(tokenId: BigInt, referralBonusIds: Array<BigInt>): BigInt {
    let result = super.call("claimReferralBonus", "claimReferralBonus(uint256,uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigIntArray(referralBonusIds),
    ]);

    return result[0].toBigInt();
  }

  try_claimReferralBonus(tokenId: BigInt, referralBonusIds: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("claimReferralBonus", "claimReferralBonus(uint256,uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigIntArray(referralBonusIds),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collectInterests(tokenId: BigInt, depositIds: Array<BigInt>): BigInt {
    let result = super.call("collectInterests", "collectInterests(uint256,uint256[]):(uint256)", [ethereum.Value.fromUnsignedBigInt(tokenId), ethereum.Value.fromUnsignedBigIntArray(depositIds)]);

    return result[0].toBigInt();
  }

  try_collectInterests(tokenId: BigInt, depositIds: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("collectInterests", "collectInterests(uint256,uint256[]):(uint256)", [ethereum.Value.fromUnsignedBigInt(tokenId), ethereum.Value.fromUnsignedBigIntArray(depositIds)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentAUM(): BigInt {
    let result = super.call("currentAUM", "currentAUM():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentAUM(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentAUM", "currentAUM():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deposit(tokenId: BigInt, amount: BigInt, duration: BigInt): BigInt {
    let result = super.call("deposit", "deposit(uint256,uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigInt(amount),
      ethereum.Value.fromUnsignedBigInt(duration),
    ]);

    return result[0].toBigInt();
  }

  try_deposit(tokenId: BigInt, amount: BigInt, duration: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("deposit", "deposit(uint256,uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigInt(amount),
      ethereum.Value.fromUnsignedBigInt(duration),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositDurations(param0: BigInt): BigInt {
    let result = super.call("depositDurations", "depositDurations(uint256):(uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);

    return result[0].toBigInt();
  }

  try_depositDurations(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("depositDurations", "depositDurations(uint256):(uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deposits(param0: BigInt, param1: BigInt): MyDanDefi__depositsResult {
    let result = super.call("deposits", "deposits(uint256,uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
    ]);

    return new MyDanDefi__depositsResult(result[0].toBigInt(), result[1].toBigInt(), result[2].toBigInt(), result[3].toBigInt(), result[4].toBigInt(), result[5].toBigInt(), result[6].toBigInt());
  }

  try_deposits(param0: BigInt, param1: BigInt): ethereum.CallResult<MyDanDefi__depositsResult> {
    let result = super.tryCall("deposits", "deposits(uint256,uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MyDanDefi__depositsResult(value[0].toBigInt(), value[1].toBigInt(), value[2].toBigInt(), value[3].toBigInt(), value[4].toBigInt(), value[5].toBigInt(), value[6].toBigInt()),
    );
  }

  durationBonusRates(param0: BigInt): BigInt {
    let result = super.call("durationBonusRates", "durationBonusRates(uint256):(uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);

    return result[0].toBigInt();
  }

  try_durationBonusRates(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("durationBonusRates", "durationBonusRates(uint256):(uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  genesisReferralCode(): string {
    let result = super.call("genesisReferralCode", "genesisReferralCode():(string)", []);

    return result[0].toString();
  }

  try_genesisReferralCode(): ethereum.CallResult<string> {
    let result = super.tryCall("genesisReferralCode", "genesisReferralCode():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  genesisTokenId(): BigInt {
    let result = super.call("genesisTokenId", "genesisTokenId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_genesisTokenId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("genesisTokenId", "genesisTokenId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getClaimableReferralBonus(tokenId: BigInt, referralBonusIds: Array<BigInt>): BigInt {
    let result = super.call("getClaimableReferralBonus", "getClaimableReferralBonus(uint256,uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigIntArray(referralBonusIds),
    ]);

    return result[0].toBigInt();
  }

  try_getClaimableReferralBonus(tokenId: BigInt, referralBonusIds: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getClaimableReferralBonus", "getClaimableReferralBonus(uint256,uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigIntArray(referralBonusIds),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollectableInterests(tokenId: BigInt, depositIds: Array<BigInt>): BigInt {
    let result = super.call("getCollectableInterests", "getCollectableInterests(uint256,uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigIntArray(depositIds),
    ]);

    return result[0].toBigInt();
  }

  try_getCollectableInterests(tokenId: BigInt, depositIds: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCollectableInterests", "getCollectableInterests(uint256,uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
      ethereum.Value.fromUnsignedBigIntArray(depositIds),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isValidDepositDuration(duration: BigInt): boolean {
    let result = super.call("isValidDepositDuration", "isValidDepositDuration(uint256):(bool)", [ethereum.Value.fromUnsignedBigInt(duration)]);

    return result[0].toBoolean();
  }

  try_isValidDepositDuration(duration: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isValidDepositDuration", "isValidDepositDuration(uint256):(bool)", [ethereum.Value.fromUnsignedBigInt(duration)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  membershipTiers(param0: BigInt): MyDanDefi__membershipTiersResult {
    let result = super.call("membershipTiers", "membershipTiers(uint256):(string,uint256,uint256,uint256,uint256,uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);

    return new MyDanDefi__membershipTiersResult(result[0].toString(), result[1].toBigInt(), result[2].toBigInt(), result[3].toBigInt(), result[4].toBigInt(), result[5].toBigInt());
  }

  try_membershipTiers(param0: BigInt): ethereum.CallResult<MyDanDefi__membershipTiersResult> {
    let result = super.tryCall("membershipTiers", "membershipTiers(uint256):(string,uint256,uint256,uint256,uint256,uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MyDanDefi__membershipTiersResult(value[0].toString(), value[1].toBigInt(), value[2].toBigInt(), value[3].toBigInt(), value[4].toBigInt(), value[5].toBigInt()),
    );
  }

  myDanPass(): Address {
    let result = super.call("myDanPass", "myDanPass():(address)", []);

    return result[0].toAddress();
  }

  try_myDanPass(): ethereum.CallResult<Address> {
    let result = super.tryCall("myDanPass", "myDanPass():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nextDepositId(): BigInt {
    let result = super.call("nextDepositId", "nextDepositId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextDepositId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextDepositId", "nextDepositId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nextReferralRewardId(): BigInt {
    let result = super.call("nextReferralRewardId", "nextReferralRewardId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextReferralRewardId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextReferralRewardId", "nextReferralRewardId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  profiles(param0: BigInt): MyDanDefi__profilesResult {
    let result = super.call("profiles", "profiles(uint256):(uint256,string,uint256,uint256,bool)", [ethereum.Value.fromUnsignedBigInt(param0)]);

    return new MyDanDefi__profilesResult(result[0].toBigInt(), result[1].toString(), result[2].toBigInt(), result[3].toBigInt(), result[4].toBoolean());
  }

  try_profiles(param0: BigInt): ethereum.CallResult<MyDanDefi__profilesResult> {
    let result = super.tryCall("profiles", "profiles(uint256):(uint256,string,uint256,uint256,bool)", [ethereum.Value.fromUnsignedBigInt(param0)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(new MyDanDefi__profilesResult(value[0].toBigInt(), value[1].toString(), value[2].toBigInt(), value[3].toBigInt(), value[4].toBoolean()));
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("proxiableUUID", "proxiableUUID():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  referralBonusRates(param0: BigInt): BigInt {
    let result = super.call("referralBonusRates", "referralBonusRates(uint256):(uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);

    return result[0].toBigInt();
  }

  try_referralBonusRates(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("referralBonusRates", "referralBonusRates(uint256):(uint256)", [ethereum.Value.fromUnsignedBigInt(param0)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referralCodes(param0: string): BigInt {
    let result = super.call("referralCodes", "referralCodes(string):(uint256)", [ethereum.Value.fromString(param0)]);

    return result[0].toBigInt();
  }

  try_referralCodes(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("referralCodes", "referralCodes(string):(uint256)", [ethereum.Value.fromString(param0)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referralRewards(param0: BigInt, param1: BigInt): MyDanDefi__referralRewardsResult {
    let result = super.call("referralRewards", "referralRewards(uint256,uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
    ]);

    return new MyDanDefi__referralRewardsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
    );
  }

  try_referralRewards(param0: BigInt, param1: BigInt): ethereum.CallResult<MyDanDefi__referralRewardsResult> {
    let result = super.tryCall("referralRewards", "referralRewards(uint256,uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MyDanDefi__referralRewardsResult(value[0].toBigInt(), value[1].toBigInt(), value[2].toBigInt(), value[3].toBigInt(), value[4].toBigInt(), value[5].toBigInt(), value[6].toBigInt()),
    );
  }

  targetToken(): Address {
    let result = super.call("targetToken", "targetToken():(address)", []);

    return result[0].toAddress();
  }

  try_targetToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("targetToken", "targetToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tierActivationLogs(param0: BigInt, param1: BigInt, param2: BigInt): MyDanDefi__tierActivationLogsResult {
    let result = super.call("tierActivationLogs", "tierActivationLogs(uint256,uint256,uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
      ethereum.Value.fromUnsignedBigInt(param2),
    ]);

    return new MyDanDefi__tierActivationLogsResult(result[0].toBigInt(), result[1].toBigInt());
  }

  try_tierActivationLogs(param0: BigInt, param1: BigInt, param2: BigInt): ethereum.CallResult<MyDanDefi__tierActivationLogsResult> {
    let result = super.tryCall("tierActivationLogs", "tierActivationLogs(uint256,uint256,uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
      ethereum.Value.fromUnsignedBigInt(param2),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(new MyDanDefi__tierActivationLogsResult(value[0].toBigInt(), value[1].toBigInt()));
  }

  toLowerCase(str: string): string {
    let result = super.call("toLowerCase", "toLowerCase(string):(string)", [ethereum.Value.fromString(str)]);

    return result[0].toString();
  }

  try_toLowerCase(str: string): ethereum.CallResult<string> {
    let result = super.tryCall("toLowerCase", "toLowerCase(string):(string)", [ethereum.Value.fromString(str)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  withdraw(tokenId: BigInt, depositIds: Array<BigInt>): BigInt {
    let result = super.call("withdraw", "withdraw(uint256,uint256[]):(uint256)", [ethereum.Value.fromUnsignedBigInt(tokenId), ethereum.Value.fromUnsignedBigIntArray(depositIds)]);

    return result[0].toBigInt();
  }

  try_withdraw(tokenId: BigInt, depositIds: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("withdraw", "withdraw(uint256,uint256[]):(uint256)", [ethereum.Value.fromUnsignedBigInt(tokenId), ethereum.Value.fromUnsignedBigIntArray(depositIds)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimPassCall extends ethereum.Call {
  get inputs(): ClaimPassCall__Inputs {
    return new ClaimPassCall__Inputs(this);
  }

  get outputs(): ClaimPassCall__Outputs {
    return new ClaimPassCall__Outputs(this);
  }
}

export class ClaimPassCall__Inputs {
  _call: ClaimPassCall;

  constructor(call: ClaimPassCall) {
    this._call = call;
  }

  get referralCode(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ClaimPassCall__Outputs {
  _call: ClaimPassCall;

  constructor(call: ClaimPassCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimReferralBonusCall extends ethereum.Call {
  get inputs(): ClaimReferralBonusCall__Inputs {
    return new ClaimReferralBonusCall__Inputs(this);
  }

  get outputs(): ClaimReferralBonusCall__Outputs {
    return new ClaimReferralBonusCall__Outputs(this);
  }
}

export class ClaimReferralBonusCall__Inputs {
  _call: ClaimReferralBonusCall;

  constructor(call: ClaimReferralBonusCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get referralBonusIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ClaimReferralBonusCall__Outputs {
  _call: ClaimReferralBonusCall;

  constructor(call: ClaimReferralBonusCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CollectInterestsCall extends ethereum.Call {
  get inputs(): CollectInterestsCall__Inputs {
    return new CollectInterestsCall__Inputs(this);
  }

  get outputs(): CollectInterestsCall__Outputs {
    return new CollectInterestsCall__Outputs(this);
  }
}

export class CollectInterestsCall__Inputs {
  _call: CollectInterestsCall;

  constructor(call: CollectInterestsCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get depositIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class CollectInterestsCall__Outputs {
  _call: CollectInterestsCall;

  constructor(call: CollectInterestsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EditMembershipTierCall extends ethereum.Call {
  get inputs(): EditMembershipTierCall__Inputs {
    return new EditMembershipTierCall__Inputs(this);
  }

  get outputs(): EditMembershipTierCall__Outputs {
    return new EditMembershipTierCall__Outputs(this);
  }
}

export class EditMembershipTierCall__Inputs {
  _call: EditMembershipTierCall;

  constructor(call: EditMembershipTierCall) {
    this._call = call;
  }

  get i(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get updatedMembershipTier(): EditMembershipTierCallUpdatedMembershipTierStruct {
    return changetype<EditMembershipTierCallUpdatedMembershipTierStruct>(this._call.inputValues[1].value.toTuple());
  }
}

export class EditMembershipTierCall__Outputs {
  _call: EditMembershipTierCall;

  constructor(call: EditMembershipTierCall) {
    this._call = call;
  }
}

export class EditMembershipTierCallUpdatedMembershipTierStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get lowerThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get upperThreshold(): BigInt {
    return this[2].toBigInt();
  }

  get interestRate(): BigInt {
    return this[3].toBigInt();
  }

  get referralBonusCollectibleLevelLowerBound(): BigInt {
    return this[4].toBigInt();
  }

  get referralBonusCollectibleLevelUpperBound(): BigInt {
    return this[5].toBigInt();
  }
}

export class FetchCall extends ethereum.Call {
  get inputs(): FetchCall__Inputs {
    return new FetchCall__Inputs(this);
  }

  get outputs(): FetchCall__Outputs {
    return new FetchCall__Outputs(this);
  }
}

export class FetchCall__Inputs {
  _call: FetchCall;

  constructor(call: FetchCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FetchCall__Outputs {
  _call: FetchCall;

  constructor(call: FetchCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _targetToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _myDanPass(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InsertMembershipTiersCall extends ethereum.Call {
  get inputs(): InsertMembershipTiersCall__Inputs {
    return new InsertMembershipTiersCall__Inputs(this);
  }

  get outputs(): InsertMembershipTiersCall__Outputs {
    return new InsertMembershipTiersCall__Outputs(this);
  }
}

export class InsertMembershipTiersCall__Inputs {
  _call: InsertMembershipTiersCall;

  constructor(call: InsertMembershipTiersCall) {
    this._call = call;
  }

  get newMembershipTiers(): Array<InsertMembershipTiersCallNewMembershipTiersStruct> {
    return this._call.inputValues[0].value.toTupleArray<InsertMembershipTiersCallNewMembershipTiersStruct>();
  }
}

export class InsertMembershipTiersCall__Outputs {
  _call: InsertMembershipTiersCall;

  constructor(call: InsertMembershipTiersCall) {
    this._call = call;
  }
}

export class InsertMembershipTiersCallNewMembershipTiersStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get lowerThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get upperThreshold(): BigInt {
    return this[2].toBigInt();
  }

  get interestRate(): BigInt {
    return this[3].toBigInt();
  }

  get referralBonusCollectibleLevelLowerBound(): BigInt {
    return this[4].toBigInt();
  }

  get referralBonusCollectibleLevelUpperBound(): BigInt {
    return this[5].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAssetsUnderManagementCapCall extends ethereum.Call {
  get inputs(): SetAssetsUnderManagementCapCall__Inputs {
    return new SetAssetsUnderManagementCapCall__Inputs(this);
  }

  get outputs(): SetAssetsUnderManagementCapCall__Outputs {
    return new SetAssetsUnderManagementCapCall__Outputs(this);
  }
}

export class SetAssetsUnderManagementCapCall__Inputs {
  _call: SetAssetsUnderManagementCapCall;

  constructor(call: SetAssetsUnderManagementCapCall) {
    this._call = call;
  }

  get newCap(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAssetsUnderManagementCapCall__Outputs {
  _call: SetAssetsUnderManagementCapCall;

  constructor(call: SetAssetsUnderManagementCapCall) {
    this._call = call;
  }
}

export class SetDurationsCall extends ethereum.Call {
  get inputs(): SetDurationsCall__Inputs {
    return new SetDurationsCall__Inputs(this);
  }

  get outputs(): SetDurationsCall__Outputs {
    return new SetDurationsCall__Outputs(this);
  }
}

export class SetDurationsCall__Inputs {
  _call: SetDurationsCall;

  constructor(call: SetDurationsCall) {
    this._call = call;
  }

  get durations(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get bonusRates(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetDurationsCall__Outputs {
  _call: SetDurationsCall;

  constructor(call: SetDurationsCall) {
    this._call = call;
  }
}

export class SetReferralBonusRatesCall extends ethereum.Call {
  get inputs(): SetReferralBonusRatesCall__Inputs {
    return new SetReferralBonusRatesCall__Inputs(this);
  }

  get outputs(): SetReferralBonusRatesCall__Outputs {
    return new SetReferralBonusRatesCall__Outputs(this);
  }
}

export class SetReferralBonusRatesCall__Inputs {
  _call: SetReferralBonusRatesCall;

  constructor(call: SetReferralBonusRatesCall) {
    this._call = call;
  }

  get rates(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetReferralBonusRatesCall__Outputs {
  _call: SetReferralBonusRatesCall;

  constructor(call: SetReferralBonusRatesCall) {
    this._call = call;
  }
}

export class SetReferralCodeCall extends ethereum.Call {
  get inputs(): SetReferralCodeCall__Inputs {
    return new SetReferralCodeCall__Inputs(this);
  }

  get outputs(): SetReferralCodeCall__Outputs {
    return new SetReferralCodeCall__Outputs(this);
  }
}

export class SetReferralCodeCall__Inputs {
  _call: SetReferralCodeCall;

  constructor(call: SetReferralCodeCall) {
    this._call = call;
  }

  get referralCode(): string {
    return this._call.inputValues[0].value.toString();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetReferralCodeCall__Outputs {
  _call: SetReferralCodeCall;

  constructor(call: SetReferralCodeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get depositIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
